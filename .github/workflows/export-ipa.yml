name: Export IPA from XCARCHIVE

on:
  workflow_dispatch:
    inputs:
      export_method:
        description: 'Export method'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - ad-hoc
        - app-store
        - enterprise
      archive_name:
        description: 'Archive name (without .xcarchive extension)'
        required: true
        default: 'App'

jobs:
  export-ipa:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Create build directory
      run: mkdir -p build output
      
    - name: Download XCARCHIVE (if in repository)
      run: |
        echo "Looking for XCARCHIVE files..."
        find . -name "*.xcarchive*" -type f
        
        # If you have a zipped archive, unzip it
        if [ -f "${{ github.event.inputs.archive_name }}.xcarchive.zip" ]; then
          echo "Unzipping ${{ github.event.inputs.archive_name }}.xcarchive.zip"
          unzip "${{ github.event.inputs.archive_name }}.xcarchive.zip" -d build/
        elif [ -d "${{ github.event.inputs.archive_name }}.xcarchive" ]; then
          echo "Using existing ${{ github.event.inputs.archive_name }}.xcarchive"
          cp -r "${{ github.event.inputs.archive_name }}.xcarchive" build/
        else
          echo "‚ùå No XCARCHIVE found. Please upload your .xcarchive file to the repository."
          echo "Expected: ${{ github.event.inputs.archive_name }}.xcarchive or ${{ github.event.inputs.archive_name }}.xcarchive.zip"
          exit 1
        fi
        
    - name: Create ExportOptions.plist
      run: |
        cat > ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>${{ github.event.inputs.export_method }}</string>
            <key>teamID</key>
            <string></string>
            <key>compileBitcode</key>
            <false/>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <true/>
            <key>signingStyle</key>
            <string>automatic</string>
        </dict>
        </plist>
        EOF
        
    - name: Export IPA from XCARCHIVE
      run: |
        ARCHIVE_PATH="build/${{ github.event.inputs.archive_name }}.xcarchive"
        
        if [ ! -d "$ARCHIVE_PATH" ]; then
          echo "‚ùå Archive not found at: $ARCHIVE_PATH"
          echo "Available files in build/:"
          ls -la build/
          exit 1
        fi
        
        echo "‚úÖ Found archive at: $ARCHIVE_PATH"
        echo "üì¶ Exporting IPA with method: ${{ github.event.inputs.export_method }}"
        
        xcodebuild -exportArchive \
          -archivePath "$ARCHIVE_PATH" \
          -exportPath output \
          -exportOptionsPlist ExportOptions.plist \
          -verbose
          
    - name: List exported files
      run: |
        echo "üìÅ Contents of output directory:"
        ls -la output/
        echo ""
        echo "üîç Looking for IPA files:"
        find output -name "*.ipa" -type f
        
    - name: Rename IPA with build info
      run: |
        cd output
        IPA_FILE=$(find . -name "*.ipa" -type f | head -n 1)
        if [ -n "$IPA_FILE" ]; then
          NEW_NAME="ScanEats-${{ github.event.inputs.export_method }}-$(date +%Y%m%d-%H%M%S).ipa"
          mv "$IPA_FILE" "$NEW_NAME"
          echo "‚úÖ Renamed IPA to: $NEW_NAME"
          echo "IPA_NAME=$NEW_NAME" >> $GITHUB_ENV
        else
          echo "‚ùå No IPA file found in output directory"
          exit 1
        fi
        
    - name: Upload IPA as artifact
      uses: actions/upload-artifact@v4
      with:
        name: ScanEats-IPA-${{ github.event.inputs.export_method }}
        path: output/*.ipa
        retention-days: 30
        
    - name: Upload export logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: Export-Logs-${{ github.event.inputs.export_method }}
        path: |
          ExportOptions.plist
          output/ExportOptions.plist
          output/Packaging.log
          output/DistributionSummary.plist
        retention-days: 7
        
    - name: Create release (optional)
      if: github.event.inputs.export_method == 'app-store'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: ScanEats iOS App Store Build
        body: |
          üçé **ScanEats iOS App Store Build**
          
          **Export Method**: ${{ github.event.inputs.export_method }}
          **Build Date**: ${{ steps.date.outputs.date }}
          **Archive**: ${{ github.event.inputs.archive_name }}.xcarchive
          
          **Installation:**
          - Download the IPA file from Assets below
          - Upload to App Store Connect for review
          
          **Next Steps:**
          1. Download IPA from Assets
          2. Upload to App Store Connect
          3. Configure app metadata
          4. Submit for Apple review
        files: output/*.ipa
        draft: false
        prerelease: true
